{
	"name": "apexdox-vs-code",
	"displayName": "ApexDox VS Code",
	"version": "1.4.0",
	"publisher": "PeterWeinberg",
	"author": {
		"name": "pweinberg"
	},
	"description": "A lightweight VS Code extension that makes creating and generating static documentation for your Salesforce Apex files an easy, integrated experience.",
	"engines": {
		"vscode": "^1.32.0"
	},
	"categories": [
		"Other"
	],
	"keywords": [
		"apex",
		"salesforce",
		"documentation",
		"documentation generator",
		"documentation generation"
	],
	"icon": "assets/icon.png",
	"galleryBanner": {
		"color": "#F0F8FF",
		"theme": "light"
	},
	"homepage": "https://github.com/no-stack-dub-sack/apexdox-vs-code/blob/master/README.md",
	"repository": {
		"url": "https://github.com/no-stack-dub-sack/apexdox-vs-code",
		"type": "git"
	},
	"bugs": {
		"url": "https://github.com/no-stack-dub-sack/apexdox-vs-code/issues"
	},
	"license": "SEE LICENSE IN LICENSE.txt",
	"activationEvents": [
		"onLanguage:apex",
		"onCommand:apexdox.run",
		"onCommand:apexdox.serveDocs"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "apexdox.run",
				"title": "ApexDox: Run"
			},
			{
				"command": "apexdox.serveDocs",
				"title": "ApexDox: Open Docs"
			},
			{
				"command": "apexdox.insertDocBlock",
				"title": "ApexDox: Stub Comment Block"
			}
		],
		"languages": [
			{
				"id": "apex",
				"extensions": [
					".cls",
					".apex"
				]
			},
			{
				"id": "json",
				"extensions": [
					".apexdoxrc"
				]
			}
		],
		"grammars": [
			{
				"path": "./syntaxes/apex.tmLanguage.injection.json",
				"scopeName": "apex-doc-comment.injection",
				"injectTo": [
					"source.apex"
				]
			}
		],
		"configuration": {
			"type": "object",
			"title": "ApexDox VS Code Configuration",
			"properties": {
				"apexdox.engine.source": {
					"type": "array",
					"default": [
						{
							"path": ""
						}
					],
					"markdownDescription": "An array of 'source' objects, with the following keys:\n- `path` (string): An absolute path to a directory containing .cls files you'd like to document.\n- `sourceUrl?` (string): Optional. A URL where the .cls source files are hosted, so ApexDox can provide links to your code - confirmed to work with GitHub), e.g.: `https://github.com/no-stack-dub-sack/MyFakeSFProject/tree/master/src/classes`.\n\nDefaults to: \n```\n[{\n  \"path\": \"${workspaceFolder}/src/classes\"\n  }]\n```\nfor non-DX projects, and \n```\n[{\n  \"path\": \"${workspaceFolder}/force-app/main/default/classes\"\n  }]\n```\nfor DX."
				},
				"apexdox.engine.targetDirectory": {
					"type": "string",
					"default": "${workspaceFolder}/apex-documentation/",
					"description": "The target directory for the output documentation. The directory you specified will be created if it does not exist. Defaults to `${workspaceFolder}/apex-documentation`."
				},
				"apexdox.engine.includes": {
					"type": "array",
					"default": [],
					"markdownDescription": "A case-sensitive array of file names and/or simple wildcard patterns (e.g. `Contact*`, or `*Test.cls`) that indicates which files in your source directory should be documented. An empty array is treated as 'include all'. Read more about this setting [here](https://github.com/no-stack-dub-sack/apexdox-vs-code#extension-settings)."
				},
				"apexdox.engine.excludes": {
					"type": "array",
					"default": [],
					"markdownDescription": "A case-sensitive array of file names and/or simple wildcard patterns (e.g. `Contact*`, or `*Test.cls`) that indicates which files in your source directory should NOT be documented. An empty array is treated as 'exclude none'. Read more about this setting [here](https://github.com/no-stack-dub-sack/apexdox-vs-code#extension-settings)."
				},
				"apexdox.engine.homePagePath": {
					"type": "string",
					"default": "",
					"markdownDescription": "An absolute path of an HTML file that contains the project's 'home page' markup. Only the markup inside the `<body>` tags will be used, or if the file contains only a partial HTML page, e.g. `<h2>Cool!</h2>`, the entire contents will be used."
				},
				"apexdox.engine.title": {
					"type": "string",
					"default": "Apex Documentation",
					"markdownDescription": "The value for the output HTML's `<title>` attribute, as well as the header text for the sidebar's banner / logo section. Defaults to 'Apex Documentation'."
				},
				"apexdox.engine.subtitle": {
					"type": "string",
					"default": "Powered by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/no-stack-dub-sack/apexdox-vs-code\">ApexDox VS Code</a>",
					"markdownDescription": "The subtitle for the sidebar's banner / logo section. Defaults to 'Powered by ApexDox VS Code'."
				},
				"apexdox.engine.scope": {
					"type": "array",
					"default": [
						"global",
						"public",
						"protected",
						"private",
						"testMethod",
						"webService"
					],
					"description": "An array of scopes to document. Default includes all scopes: 'global', 'public', 'protected', 'private', 'testMethod', 'webService'."
				},
				"apexdox.engine.showTOCSnippets": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "If set to `false`, ApexDox will hide methods' description snippet in the class's table of contents. Defaults to `true`."
				},
				"apexdox.engine.sortOrder": {
					"type": "string",
					"default": "alpha",
					"description": "The order in which class methods, properties, and inner classes are presented to the user in your documentation. Either 'logical', the order they appear in the source file, or 'alpha', alphabetically. Defaults to 'alpha'."
				},
				"apexdox.engine.port": {
					"type": "number",
					"default": 8080,
					"markdownDescription": "The port number that the `ApexDox: Open Docs` command will serve your docs on. Defaults to `8080`."
				},
				"apexdox.engine.assets": {
					"type": "array",
					"default": [],
					"markdownDescription": "An array of absolute paths of files you would like to be included in the target directory's 'assets' folder. This is where ApexDox keeps JavaScript, CSS, and images. Read mode about this setting [here](https://github.com/no-stack-dub-sack/apexdox-vs-code#extension-settings)."
				},
				"apexdox.engine.cleanDir": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "If set to `true`, ApexDox will use rimraf to remove any files or folders in your target directory before creating your docs. Useful for keeping a continuously growing project's documentation folder clean. Defaults to `false`."
				},
				"apexdox.engine.pages": {
					"type": "array",
					"default": [],
					"markdownDescription": "An array of absolute paths of non-ApexDox generated HTML files that you'd like to be available to your documentation. These files will be placed in your target directory alongside generated HTML files. For example, if you'd like to link to a page from your project's home page or from one of it's class group pages, include that page here. If your file's name is `MyCoolPage.html`, you can then link to it with `href=\"./MyCoolPage.html\"`."
				},
				"apexdox.docblock.alignItems": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "Vertically align anything after an ApexDox @tag. E.g.:\n```\n/**\n * @description         Some description\n * @param myParam       Param description\n * @param anotherParam  Another param description\n */\n```\nDefaults to `false`."
				},
				"apexdox.docblock.omitDescriptionTag": {
					"type": "boolean",
					"default": true,
					"markdownDescription": "ApexDox `@description` tags are optional. Set this to `false` to include them. Defaults to `true`."
				},
				"apexdox.docblock.spacious": {
					"type": "boolean",
					"default": false,
					"markdownDescription": "When set to `true` ApexDox comment block stubs will add an empty line after the description line and before the next tag. Defaults to `false`."
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"compile": "webpack --mode none",
		"watch": "webpack --mode none --watch",
		"yaml-2-grammar": "node ./scripts/convertGrammar.js",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "yarn run test-setup && node ./node_modules/vscode/bin/test",
		"test-setup": "yarn run test-compile && yarn run test-cleanup",
		"test-compile": "tsc -p ./",
		"test-cleanup": "rm -rf ./src/test/test-proj/docs",
		"update-snapshots": "rm ./src/test/snapshots/* && node ./scripts/updateSnapshots.js"
	},
	"devDependencies": {
		"@types/cheerio": "^0.22.11",
		"@types/js-yaml": "^3.12.1",
		"@types/lodash.escape": "^4.0.6",
		"@types/mocha": "^2.2.42",
		"@types/node": "^10.12.21",
		"@types/node-static": "^0.7.3",
		"@types/open": "^6.0.0",
		"@types/pretty": "^2.0.0",
		"@types/rimraf": "^2.0.2",
		"cheerio": "^1.0.0-rc.3",
		"ts-loader": "^5.4.3",
		"tslint": "^5.12.1",
		"typescript": "^3.3.1",
		"vscode": "^1.1.28",
		"webpack": "^4.30.0",
		"webpack-cli": "^3.3.1"
	},
	"dependencies": {
		"js-yaml": "^3.13.1",
		"lodash.escape": "^4.0.1",
		"node-static": "^0.7.11",
		"open": "^6.0.0",
		"pretty": "^2.0.0",
		"rimraf": "^2.6.3"
	}
}
